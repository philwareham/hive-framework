@use "../setup";

/* ==========================================================================
   Styling and layout for screen media at 1st breakpoint
   ========================================================================== */

@media screen and (min-width: setup.$breakpoint-1) {

    /**
     * Screen size-specific elements.
     */

    .screen-small {
        display: none;
    }

    .screen-large {
        display: block; // TODO: use `display: revert` when browser support is widespread.
    }

    /**
     * Grid container.
     */

    .layout-container {
        display: flex; // Flexbox fallback for browsers without CSS Grid support.
        display: grid;
        gap: 0 2em;
        grid-template-columns: repeat(12, 1fr);
        flex-wrap: wrap; // Flexbox fallback for browsers without CSS Grid support.
        margin: 0 -1em; // Flexbox fallback for browsers without CSS Grid support.

        > * {
            box-sizing: border-box; // Flexbox fallback.
            min-width: 0; // Fix Firefox `pre` overflow issues.
            padding: 0 1em; // Flexbox fallback.
        }
    }

    /**
     * Generate sizes all for grid column cells.
     *
     * We will then adjust them at various breakpoints.
     *
     * Example HTML:
     *
     * <div class="layout-1col"></div>
     *
     * <div class="layout-2col">
     * <div class="layout-2col">
     *
     * <div class="layout-4col-3span"></div>
     * <div class="layout-4col"></div>
     */

    .layout-1col,
    .layout-2col,
    .layout-3col,
    .layout-3col-2span,
    .layout-4col-alt,
    .layout-4col-2span,
    .layout-4col-3span {
        grid-column: span 12;
        width: 100%; // Flexbox fallback.
    }

    /**
     * Cells for 4 column layouts are generated, but as 2 columns at this width.
     */

    .layout-4col {
        grid-column: span 6;
        width: 50%; // Flexbox fallback.
    }

    // Override Flexbox fallback for browsers with CSS Grid support.
    @supports (display: grid) {
        .layout-container {
            margin: 0;
        }

        .layout-1col,
        .layout-2col,
        .layout-3col,
        .layout-3col-2span,
        .layout-4col,
        .layout-4col-alt,
        .layout-4col-2span,
        .layout-4col-3span {
            width: auto;
            padding: 0;
        }
    }

    /**
     * Allow two columns of text.
     */

    .layout-text2col,
    .layout-text3col,
    .layout-text4col {
        column-count: 2;
        column-gap: 2em;

        :first-child {
            margin-top: 0;
        }

        li {
            page-break-inside: avoid; // Fix Firefox bug.
            break-inside: avoid;
        }

        .footnote {
            display: inline-block;
        }
    }
}


/* ==========================================================================
   Styling and layout for screen media at 2nd breakpoint
   ========================================================================== */

@media screen and (min-width: setup.$breakpoint-2) {

    /**
     * Cells for 2 column and 3 column layouts are generated.
     *
     * Example HTML:
     *
     * <div class="layout-3col"></div>
     * <div class="layout-3col-2span"></div>
     */

    .layout-2col {
        grid-column: span 6;
        width: 50%; // Flexbox fallback.
    }

    .layout-3col {
        grid-column: span 4;
        width: 33.333%; // Flexbox fallback.
    }

    .layout-3col-2span {
        grid-column: span 8;
        width: 66.666%; // Flexbox fallback.
    }

    // Override Flexbox fallback for browsers with CSS Grid support.
    @supports (display: grid) {
        .layout-2col,
        .layout-3col,
        .layout-3col-2span {
            width: auto;
        }
    }

    /**
     * Allow three columns of text.
     */

    .layout-text3col,
    .layout-text4col {
        column-count: 3;
    }

    /**
     * Navigation layout changes.
     */

    #site-navigation {
        width: 88%;

        .js & {
            max-height: none;
            overflow: visible;
        }

        ul {
            display: flex;
            flex-wrap: wrap;
        }

        a {
            padding: 0.5em 1em;
        }
    }

    @include setup.dark-mode {
        #site-navigation {
            border-top-color: var(--color-border-extra-dark);

            li {
                border-right-color: var(--color-border-extra-dark);

                &:first-child {
                    border-left-color: var(--color-border-extra-dark);
                }
            }
        }
    }

    /**
     * Remove navigation toggle show/hide button for navigation.
     */

    #site-navigation-toggle,
    .js #site-navigation-toggle {
        display: none;
    }

    /**
     * jQuery UI Tabs layout changes.
     */

    .ui-tabs:not(.ui-tabs-vertical) {
        .ui-tabs-nav {
            border-bottom: 0;

            li {
                display: inline-block;
                margin: 0;
                border-bottom-width: 0;
                border-radius: setup.$border-radius setup.$border-radius 0 0;
                white-space: nowrap;

                &.ui-tabs-active {
                    margin-bottom: -1px;
                    padding-bottom: 1px;
                }
            }
        }

        .ui-tabs-panel {
            border-top-width: 1px;
        }
    }
}


/* ==========================================================================
   Styling and layout for screen media at 3rd (final) breakpoint
   ========================================================================== */

@media screen and (min-width: setup.$breakpoint-3) {

    /**
     * Adjust baseline.
     */

    html,
    h6,
    pre,
    code,
    kbd,
    samp,
    small,
    figcaption,
    tfoot,
    .footnote,
    .ui-helper-reset,
    .ui-selectmenu-optgroup {
        line-height: setup.$line-height-desktop;
    }

    /**
     * Cells for 4 column layouts are generated.
     *
     * Example HTML:
     *
     * <div class="layout-4col-3span"></div>
     * <div class="layout-4col-alt"></div>
     */

    .layout-4col,
    .layout-4col-alt {
        grid-column: span 3;
        width: 25%; // Flexbox fallback.
    }

    .layout-4col-2span {
        grid-column: span 6;
        width: 50%; // Flexbox fallback.
    }

    .layout-4col-3span {
        grid-column: span 9;
        width: 73%; // Flexbox fallback.
    }

    // Override Flexbox fallback for browsers with CSS Grid support.
    @supports (display: grid) {
        .layout-4col,
        .layout-4col-alt,
        .layout-4col-2span,
        .layout-4col-3span {
            width: auto;
        }
    }

    /**
     * Allow four columns of text.
     */

    .layout-text4col {
        column-count: 4;
    }
}
